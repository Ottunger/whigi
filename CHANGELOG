Updated on 21-08-16, 13:30
**************************



Whigi endpoints:
****************

/api/v<any>/user/<id-email>: Get, needs auth, needs puzzle
Retrieves public data of user. Can also use email as key.

/api/v<any>/profile: Get, needs auth
Retrieves own data.

/api/v<any>/profile/data: Get, needs auth
Retrieves list of owned fragments, and list of shared with me vaults.

/api/v<any>/profile/data/new: Post, needs auth, needs puzzle
Saves a new data fragment. The API sends back the newly generated id for that data_name.
{"name": "string", "encr_data": "string"}

/api/v<any>/profile/update: Post, needs auth
Updates password. When updated password, can send the password hashed but needs to send the new ecrypted master key as well.
{"password": "string", "encr_master_key": "string"}

/api/v<any>/user/create: Post, needs captcha
Creates a new entry if none matches. The password is this only time sent in clear.
{"first_name": "string", "last_name": "string", "username": "string", "password": "string", "email": "string"}

/api/v<any>/activate/<key>: Get
Activates the user whose activation key is given.

/api/v<any>/profile/deactivate: Delete, needs auth
Deactivates the user.

/api/v<any>/profile/token/new: Post, needs auth (basic only), needs puzzle
Creates a new token for the logged in user to connect without credentials.
{"is_eternal": "boolean"}

/api/v<any>/profile/token: Delete, needs auth
Removes all granted bearer tokens.

/api/v<any>/data/<id>: Get, needs auth
Retrieves an encrypted piece of data.

/api/v<any>/vault/new: Post, needs auth, needs puzzle
Creates a new vault for sharing with another user.
{"data_name": "string", "shared_to_id": "string", "aes_crypted_shared_pub": "string", "data_crypted_aes": "string"}

/api/v<any>/vault/<data_name>/<shared_to_id>: Delete, needs auth
Removes a vault from the storage, revoking access grant.

/api/v<any>/vault/<data_name>/<sharer_id>: Get, needs auth, needs puzzle
Retrieves a piece of information that was shared to me.

/api/v<any>/vault/time/<data_name>/<shared_to_id>: Get, needs auth
Retrieves the last time the other party accessed the vault for reading.



Whigi-restore endpoints:
************************

/api/v<any>/new: Post, needs auth of Whigi
Adds a new mapping.
{"email": "string", "master_key": "string", "key": "string"}

/api/v<any>/request/<email>: Get
Creates a token sent by mail to retrieve master_key, lag protected. The page pointed to is /password-recovery that *should* call /api/v<any>/key/<token> for user experience.

/api/v<any>/key/<token>: Get
Retrieves the master key if token is valid and clear the token. The page that calls this method *should* inform Whigi of a password change.